1. Pengenalan

Banyak algoritma yang dipublikasikan di jurnal dipresentasikan dalam cara yang tidak jelas. konsep utama ditampilkan namun penjelasan mengenai contohnya sedikit, dan bahkan lebih sedikit lagi mengenai implementasinya.

pohon dan graf menghitung di antara abkstraksi matematika yang paling berguna, dan saat yang sama, juga menghitung struktur kombinasi yang paling umum dalam sains komputer. Baik gagasan teoritis graf yang mendasari algoritma pohon dan graf serta struktur data untuk representasinya, keduanya adalah subjek dalam bab ini. Lebih lanjut, dasar yang singkat dari gaya pemrograman literate untuk presentasi algoritma dan struktur data juga diadopsi dalam buku ini dan termasuk dalam bab ini, bersamaan dengan penjelasan yang singkat mengenai koreksi implementasi dengan pendekatan berdasarkan hasil pengecekan menggunakan sertifikat kebenaran.


1.1 pohon dan graf

Gagasan mengenai graf yang merupakan sains komputer paling berguna adalah graf berarah. graf adalah struktur kombinasi yang terdiri dari objek dari set terbatas, simpul yang bernama, bersamaan dengan set terbatas (kemungkinan kosong) dari pasangan yang dipesan atas simpul, bernama tepi langsung dari lengkungan.

graf sering digambarkan sebagai sebuah set poin di pesawat dan set panah, yang masing-masingnya bergabung menjadi dua poin (tidak mesti berbeda). dalam sebuah penggambaran graf G (V, E), setiap vertex v E V digambarkan sebagai sebuah poin atau lingkaran kecil, dan setiap busur (v, w) E E digambarkan sebagai sebuah panah dari poin lingkaran vertex v ke poin atau lingkaran yang terhubung ke vertex w.

sebuah vertex memiliki derajat dalam sebuah graf,yang satu disajikan dengan jumlah busur yang masuk ke vertex dan yang lainnya disajikan dengan jumlah busur yang keluar dari vertex.

struktur kombinasi graf  mencakup dua gagasan struktur. sebuah sub graf hanya sebuah graf dimana vertex dan set busurnya  terkandung dalam vertex dan set busur dari graf yang disajikan berturutan. Sub graf  dari sebuah graf yang terinduksi oleh sebuah sub set simpulnya memiliki sebagai set busur di graf yang digambarkan dimana sumber dan target dimiliki oleh sub set simpul.

"graf tidak langsung"
gagasan mengenai graf yang paling sering ditemukan dalam matematika adalah graf tidak langsung. tidak seperti tepi langsung atau busur dari sebuah graf, tepi dari graf tidak langsung tidak memiliki asosiasi petunjuk yang berkaitan dengan mereka dan oleh karena itu tidak ada perbedaan yang dibuat di antara sumber dan target simpul tepi. dalam pengartian matematika, sebuah graf tidak langsung terdiri dari sebuah set simpul dan sebuah set terbatas dari tepi tidak langsung, dimana setiap tepi memiliki sebuah set dari satu atau dua simpul yang berkaitan dengannya. meskipun, dalam pandangan sains komputer mengenai graf tidak langsung, sebuah graf tidak langsung adalah kasus khusus dari sebuah graf langsung dimana untuk setiap busur dari graf (v, w), busur cadangan (w, v) juga dimiliki graf. graf tidak langsung juga dinamakan "bidirected"

graf tidak langsung sering digambarkan sebagai sebuah poin di pesawat dan sebuah set segmen garis, yang masing-masingnya bergabung menjadi dua poin (tidak mesti berbeda). dalam sebuah penggambaran graf tidak langsung G = (V, E), setiap vertex V E V digambarkan sebagai sebuah poin atau sebuah lingkaran kecil dan setiap pasangan busur konter paralel (v, w), (w, v) E E digambarkan sebagai sebuah segmen garis antara poin atau lingkaran yang terhubung ke simpul v dan w.

terminologi graf langsung membawa ke graf tidak langsung, meskipun sedikit perbedaan layak disebutkan. pertama-tama, sejak sebuah tepi dalam graf tidak langsung diartikan sebagai sebuah pasangan busur konter-paralel dalam menghubungkan bidirected graf, sejumlah busur masuk ke vertex yang ditentukan dan sejumlah busur keluar dari vertex bersamaan dan oleh karena itu tidak ada perbedaan yang dibuat antara tingkat dalam dan tingkat luar dari vertex. dengan kata lain, tingkat sebuah vertex dalah graf tidak langsung sama dengan tingkat dalam dan tingkat luar vertex dalam menghubungkan bidirected graf. untuk alasan yang sama, ukuran sebuah graf tidak langsung adalah setengah ukuran dari menghubungkan bidirected grapph.

==pohon====
keluarga graf tidak langsung yang dijelaskan di atas memiliki pasangan graf langsung. dalam kasus tertentu, selama gagasan pohon lebih sering ditemukan dalam matematika diskrit yang merupakan pohon tidak langsung, gagasan pohon yang paling berguna dalam sains komputer merupakan sebuah akar pohon langsung, atau hanya pohon. pohon adalah perkara khusus dari sebuah graf dimana terdapat vertex yang dibedakan, dinamakan akar pohon, seperti ada sebuah jalan unik dari akar ke vertex lain dari pohon. simpul pohon dinamakan titik. 

1.2 Pemrograman literate
pemrograman literate adalah sebuah metodologi pengembangan program yang didasarkan pada ide menanamkan implementasi ke sebuah dokumen yang menjelaskan algoritma, daripada termasuk dokumentasi dalam formulir komentar tanpa kode program, dan memiliki tujuan memproduksi program yang mudah untuk dipahami dan dirawat. semua algoritma yang ditampilkan di buku ini diimplementasikan tangan ke tangan dengan dokumentasi mereka menggunakan kakas pemrograman literate dan semua buku, mengatur menggunakan Jb.TEX, bersama dengan menjalankan program C++, yang diproduksi dari dokumen tunggal.

struktur pemrograman literate ditentukan oleh programmer, daripada penyusun bahasa pemrograman. kode program dapat dipecah menjadi kecil, modul program yang mudah dipahami, juga disebut bongkahan, dan didokumentasikan dengan pesanan yang terbaik yang cocok untuk pemahaman manusia.

program literate terstruktur sebagai sebuah bagian koleksi, masing-masing memiliki bagian dokumentasi dan bagian kode. bagian dokumentasi mendeskripsikan tujuan bagiannya, sering termasuk deskripsi verbal algoritma dan informasi tekstual lainnya yang mungkin membantu untuk diproses oleh sistem penyusunan huruf. bagian kode merupakan bagian kode untuk seluruh program .

beberapa keuntungan utama dari pemrograman literate disebutkan di bawah ini.

+ hanya terdapat satu dokumen sumber, dari dokumentasi dan kode program yang diekstrak. kode dokumen demikian selalu kosisten dengan kode yang dieksekusi.

+ sebuah program adalah pikiran graf atau web hubungan struktural antara bagian simpel, daripada pohon mencerminkan struktur hierarki program. baik pemrograman atas maupun bawah jadi didukung pada waktu yang sama.

+ setiap bagian program dapat memiliki ukuran yang sesuai, tanpa mengubah perhatian program bagian lainnya. lebih lanjut, setiap bagian dapat dipecah menjadi bagian yang lebih kecil bila dibutuhkan, untuk meningkatkan perhatian program.

+ program literate menghasilkan waktu lebih singkat untuk debug, karena programmer didorong untuk memaksakan dirinya menjadi disiplin, dan mereka juga lebih mudah untuk memelihara, karena keputusan desain didokumentasikan selama pengembangan program.

+ pemrograman literate memberikan penguatan kognitif, karena dokumentasi mengatur dalam format cetakan yang bagus, dimana saat menyusun bahasa pemrograman ditampilkan dalam gaya yang sesuai.

+ dokumentasi dapat berguna penuh dalam kapabilitas yang berkenaan dengan percetakan yang masuk dengan sistem pengaturan, termasuk mengatur rumus matematika dan perkalian, tabel, dan diagram.

+ membaca alat bantu seperti daya muat meja, daftar isi, dan penunjukan ke kata lain antara modul program dapat dihasilkan, demikian mengembalikan program literate ke sebuah dokumen cetakan tinggi, dengan penunjuk konsep yang berhubungan dan bab.
































